// Code generated by mockery v2.49.1. DO NOT EDIT.

package mocks

import (
	adminmodels "github.com/SolomonAHailu/one-card-system/models/adminmodels"
	mock "github.com/stretchr/testify/mock"

	repo "github.com/SolomonAHailu/one-card-system/skeletons/repo/admin/admincontrollers"
)

// GetALLDeviceUsecase is an autogenerated mock type for the GetALLDeviceUsecase type
type GetALLDeviceUsecase struct {
	mock.Mock
}

// GetAllDevices provides a mock function with given fields: getAllDevice
func (_m *GetALLDeviceUsecase) GetAllDevices(getAllDevice *repo.GetAllDeviceRequest) ([]adminmodels.Devices, error) {
	ret := _m.Called(getAllDevice)

	if len(ret) == 0 {
		panic("no return value specified for GetAllDevices")
	}

	var r0 []adminmodels.Devices
	var r1 error
	if rf, ok := ret.Get(0).(func(*repo.GetAllDeviceRequest) ([]adminmodels.Devices, error)); ok {
		return rf(getAllDevice)
	}
	if rf, ok := ret.Get(0).(func(*repo.GetAllDeviceRequest) []adminmodels.Devices); ok {
		r0 = rf(getAllDevice)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).([]adminmodels.Devices)
		}
	}

	if rf, ok := ret.Get(1).(func(*repo.GetAllDeviceRequest) error); ok {
		r1 = rf(getAllDevice)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// NewGetALLDeviceUsecase creates a new instance of GetALLDeviceUsecase. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewGetALLDeviceUsecase(t interface {
	mock.TestingT
	Cleanup(func())
}) *GetALLDeviceUsecase {
	mock := &GetALLDeviceUsecase{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
